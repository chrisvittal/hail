#!/bin/sh

pkg_name=clang
pkg_version=7.0.0
url='https://storage.googleapis.com/hail-common/thirdparty/sources'
tarballs="cfe-$pkg_version.src.tar.xz
compiler-rt-$pkg_version.src.tar.xz
libcxx-$pkg_version.src.tar.xz
libcxxabi-$pkg_version.src.tar.xz
llvm-$pkg_version.src.tar.xz"
llvm_dir=llvm-$pkg_version.src

fetch() {
    for tarball in $tarballs; do
        printf "    Downloading $tarball...\n"
        if [ ! -e $tarball ]; then
            curl -L -O "$url/$tarball"
        else
            printf "    Up to date: $tarball...\n"
        fi
    done
}

prepare() {
    mkdir -p src && cd src
    for tarball in ../*.xz; do
        tar xf $tarball
    done

    mv cfe-$pkg_version.src $llvm_dir/tools/clang
    mv compiler-rt-$pkg_version.src $llvm_dir/projects/compiler-rt
    mv libcxx-$pkg_version.src $llvm_dir/projects/libcxx
    mv libcxxabi-$pkg_version.src $llvm_dir/projects/libcxxabi

    mkdir -p $llvm_dir/build
}

build() {
    cd src/$llvm_dir/build
    cmake .. -G 'Ninja' \
        -Wno-dev \
        -DPYTHON_EXECUTABLE=/usr/bin/python3 \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX= \
        -DLLVM_BUILD_LLVM_DYLIB=ON \
        -DLLVM_LINK_LLVM_DYLIB=ON \
        -DLLVM_ENABLE_OCAMLDOC=OFF \
        -DLLVM_TARGETS_TO_BUILD="X86"
    ninja
}

install() {
    cd src/$llvm_dir/build
    DESTDIR=$dist_dir ninja 'install/strip'
}

package() {
    tar cf - dist/bin dist/include dist/lib | xz -v -9 > $PKGDIR/$pkg_name-$pkg_version.pkg.tar.xz
}
